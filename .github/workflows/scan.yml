name: File Trigger Workflow

on:
  push:
    paths:
      - 'a.yaml'
      - 'b.yaml'
      - 'c.yaml'
env:
  FILES: a.yaml,b.yaml,c.yaml
jobs:
  determine_file:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Check for file changes
      #   id: file_changes
      #   run: |
      #     if [[ $(git diff --name-only ${{ github.base_ref }}..${{ github.head_ref }}) == *"a.yaml"* && $(git diff --name-only ${{ github.base_ref }}..${{ github.head_ref }}) == *"b.yaml"* ]]; then
      #       echo "Both file_a and file_b updated."
      #       echo "::set-output name=files_updated::true"
      #     else
      #       echo "Either file_a or file_b or both not updated."
      #       echo "::set-output name=files_updated::false"
      #     fi
      
      - name: Check for file changes
        id: file_changes
        run: |
          git fetch origin ${{ github.base_ref }}
          git fetch origin ${{ github.head_ref }}
          if [[ $(git diff --name-only origin/${{ github.base_ref }}..origin/${{ github.head_ref }}) == *"a.yaml"* && $(git diff --name-only origin/${{ github.base_ref }}..origin/${{ github.head_ref }}) == *"b.yaml"* ]]; then
            echo "Both file_a and file_b updated."
            echo "::set-output name=files_updated::true"
          else
            echo "Either file_a or file_b or both not updated."
            echo "::set-output name=files_updated::false"
          fi
    
      
      - name: Get all changed artifact files 
        id: changed-artifact-files
        uses: tj-actions/changed-files@v44
        with:
          # Avoid using single or double quotes for multiline patterns
          files: |
             **.yaml

      - name: List all changed files markdown files
        if: steps.changed-artifact-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-artifact-files.outputs.all_changed_files }}
        run: |
          echo $ALL_CHANGED_FILES
          echo "hjhk"
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
            if [[ "$file" == "a.yaml" ]]; then
              echo "Afile"
              echo "TEST=A">> $GITHUB_ENV
              python3 main.py
            fi
            if [[ "$file" == "b.yaml" ]]; then
              echo "Bfile"
              echo "TEST=B">> $GITHUB_ENV
              python3 main.py
            fi
          done

      # - name: Determine triggering file
      #   run: |
      #     echo "$(git diff --name-only)"
      #     echo ARTIFACTS_FILES=$(git diff --name-only | python -c "import sys, os; print(','.join([file for file in sys.stdin.read().split() if file in os.environ.get('FILES').split(',')]))") >> $GITHUB_ENV
      #     echo $ARTIFACTS_FILES

# name: File Trigger Workflow

# on:
#   push:
#     paths:
#       - 'a.yaml'
#       - 'b.yaml'
#       - 'c.yaml'

# jobs:
#   determine_file:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Determine triggering file
#         run: |
#           if [ -n "$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- a.yaml)" ]; then
#             echo "File a.yaml triggered the action"
#           elif [ -n "$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- b.yaml)" ]; then
#             echo "File b.yaml triggered the action"
#           elif [ -n "$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- c.yaml)" ]; then
#             echo "File c.yaml triggered the action"
#           else
#             echo "None of the specified files triggered the action"
#           fi



# name: scan
# on:
#   push:
#     branches:
#       - main
#     # types:
#     #   - opened
#     #   - synchronize
#     paths:
#       - index.html
#       - index2.html

# env:
#   paths: 'index.html, index2.html'

# jobs:
#   output_path:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Get changed files
#         id: changes
#         run: |
#           echo "files=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | xargs)" >> $GITHUB_OUTPUT

#       - name: Determine triggering path and sonar project key
#         id: determine_path
#         shell: bash
#         run: |
#           # Show paths
#           echo "Paths: ${{ env.paths }}"

#           # Get the list of paths being monitored
#           monitored_paths=$(echo "${{ env.paths }}" | tr "," " ")
#           echo "Monitored paths: $monitored_paths"
#           echo "Changed files: ${{ steps.changes.outputs.files }}"
#           echo "If you see here files that you have not modified, please update your branch with changes from main."

#           # Loop through each path
#           for path in $monitored_paths
#           do
#             # Check if the modified files include this path
#             if echo "${{ steps.changes.outputs.files }}" | grep -q "$path"; then
#               # Set the output variable and exit the loop
#               echo "triggering_path is $path"
#               echo "triggering_path=$path" >> $GITHUB_OUTPUT
#               break
#             fi
#           done
